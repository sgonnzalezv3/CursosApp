{"version":3,"sources":["theme/theme.js","Servicios/HttpClient.js","actions/UsuarioAction.js","contexto/store.js","components/Tool/Style.js","logo.svg","actions/ImagenAction.js","components/security/PerfilUsuario.js","components/navegacion/bar/MenuIzquierda.js","components/navegacion/bar/MenuDerecha.js","components/navegacion/bar/BarSesion.js","components/navegacion/AppNavbar.js","components/navegacion/RutaSegura.js","components/security/Login.js","actions/CursoAction.js","components/Tool/ControlTyping.js","components/cursos/PaginadorCurso.js","components/cursos/NuevoCurso.js","components/navegacion/RutaSegura2.js","actions/InstructorAction.js","components/instructores/NuevoInstructor.js","components/instructores/PaginadorInstructor.js","components/security/RegistrarUsuario.js","App.js","reportWebVitals.js","contexto/reducers/sesionUsuarioReducer.js","contexto/reducers/openSnackBarReducer.js","index.js","contexto/initialState.js","contexto/reducers/index.js"],"names":["theme","createMuiTheme","palette","primary","light","main","dark","contrastText","axios","defaults","baseURL","interceptors","request","use","config","token_seguridad","window","localStorage","getItem","headers","Authorization","error","Promise","reject","requestGenerico","get","url","post","body","put","delete","instancia","create","CancelToken","isCancel","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","style","paper","marginTop","display","flexDirection","alignItems","form","width","submit","avatar","margin","backgroundColor","height","icon","fontSize","obtenerDataImagen","imagen","resolve","eject","nombre","name","extension","split","pop","lector","FileReader","readAsDataURL","onload","data","result","onerror","PromiseRejectionEvent","PerfilUsuario","sesionUsuario","dispatch","useState","nombreCompleto","email","password","confirmarPassword","username","imagenPerfil","fotoUrl","usuario","setUsuario","ingresarValoresMemoria","e","target","anterior","useEffect","fotoKey","uuidv4","Container","component","maxWidth","justify","Avatar","src","reactFoto","Typography","variant","Grid","container","spacing","item","xs","md","TextField","onChange","fullWidth","label","type","Password","ConfirmarPassword","withIcon","singleImage","buttonText","imagenes","foto","URL","createObjectURL","then","respuesta","console","log","imgExtension","maxFileSize","Button","onClick","preventDefault","HttpCliente","response","fotoPerfil","nuevoFile","sesion","autenticado","catch","actualizarUsuario","status","openMensaje","open","mensaje","setItem","token","Object","keys","errors","size","color","MenuIzquierda","classes","className","list","List","ListItem","Link","button","to","ListItemText","Divider","MenuDerecha","salirSesion","FotoUsuarioTemp","useStyles","makeStyles","seccionDesktop","breakpoints","up","seccionMobile","grow","flexGrow","avatarSize","listItemText","fontWeight","paddingLeft","withRouter","props","abrirMenuIzquierda","setAbrirMenuIzquierda","abrirMenuDerecha","setAbrirMenuDerecha","cerrarMenuIzquierda","cerrarMenuDerecha","salirSesionApp","removeItem","nuevoUsuario","history","push","Fragment","Drawer","onClose","anchor","onKeyDown","Toolbar","IconButton","AppNavbar","AppBar","position","RutaSegura","Component","rest","render","usuarioSesion","stype","loginUsuario","guardarCurso","curso","a","promesaCurso","promesaImagen","all","PaginacionCurso","paginador","ControlTyping","texto","delay","textoValor","setTextoValor","manejador","setTimeout","clearTimeout","PaginadorCurso","textoBusquedaCurso","setTextoBusquedaCurso","typingBuscadorTexto","titulo","numeroPagina","cantidadElementos","paginadorRequest","setPaginadorRequest","listaRecords","totalRecords","numeroPaginas","paginadorResponse","setPaginadorResponse","tituloVariant","paginaVariant","objetoPaginadorRequest","obtenerListaCurso","padding","paddingTop","paddingBottom","sm","TableContainer","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","Hidden","mdDown","TableBody","map","Titulo","Descripcion","Date","FechaPublicacion","toLocaleString","PrecioActual","Promocion","CursoId","TableFooter","TablePagination","rowsPerPageOptions","count","rowsPerPage","page","onChangePage","event","nuevaPagina","parseInt","onChangeRowsPerPage","labelRowsPerPage","NuevoCurso","fechaSeleccionada","setFechaSeleccionada","imagenCurso","setImagenCurso","descripcion","precio","promocion","setCurso","utils","DateFnsUtils","id","format","KeyboardButtonProps","cursoId","objetoCurso","parseFloat","fechaPublicacion","objetoImagen","objetoReferencia","respuestas","responseCurso","responseImagen","RutaSegura2","guardarInstructor","instructor","promesaInstructor","PaginacionInstructor","NuevoInstructor","imagenInstructor","setImagenInstructor","apellidos","grado","setInstructor","instructorId","objetoInstructor","responseInstructor","PaginadorInstructor","textoBusquedaInstructor","setTextoBusquedaInstructor","nombreVariant","obtenerListaInstructor","Nombre","Apellidos","FechaCreacion","Grado","InstructorId","yup","required","min","registroUsuario","location","reload","App","openSnackbar","sesionUsario","iniciaApp","setIniciaApp","obtenerUsuarioActual","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","message","exact","path","Login","RegistrarUsuario","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","sesionUsuarioReducer","state","action","openSnackbarReducer","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.380743e8.chunk.js","sourcesContent":["import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#63a4fff\",\r\n      main: \"#1976d2\",\r\n      dark: \"#004ba0\",\r\n      contrastText: \"#ecfad8 \",\r\n    }\r\n  },\r\n});\r\nexport default theme;\r\n","import axios from \"axios\";\r\n//indicar endpoint base en el cual trabajan los webservices\r\n//axios.defaults.baseURL = \"http://localhost:5000/api\";\r\naxios.defaults.baseURL = 'https://coursesresource.azurewebsites.net/api';\r\n//axios.defaults.baseURL = 'https://cursosapp.azurewebsites.net/api';\r\n//axios.defaults.baseURL = 'https://cursogestion.azurewebsites.net/api'\r\n\r\n// Agregar un interceptor para que todos los request que salen, incluyan en la cabecera el token!\r\n\r\n\r\n\r\naxios.interceptors.request.use(\r\n  (config) => {\r\n    //capturar el token almacenado en el storage del browser\r\n    const token_seguridad = window.localStorage.getItem(\"token_seguridad\");\r\n    //validar si existe\r\n    if (token_seguridad) {\r\n      config.headers.Authorization = \"Bearer \" + token_seguridad;\r\n      return config;\r\n    }\r\n  },\r\n  //por si hubo un error\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  });\r\n\r\n  \r\n\r\n//crear objeto generico que representa los request que se envian al servidor\r\nconst requestGenerico = {\r\n  get: (url) => axios.get(url),\r\n  //end point y json\r\n  post: (url, body) => axios.post(url, body),\r\n  put: (url, body) => axios.put(url, body),\r\n  delete: (url) => axios.delete(url),\r\n};\r\nexport default requestGenerico;\r\n","import HttpCliente from \"../Servicios/HttpClient\";\r\nimport axios from \"axios\";\r\n\r\n//invacando axios para que permite hacer un request y response valido sin token\r\nconst instancia = axios.create();\r\ninstancia.CancelToken = axios.CancelToken;\r\ninstancia.isCancel = axios.isCancel;\r\n\r\n//solo instancia se usa en login y registrarusuario porque no deben usar el token de seguridad para consumir algo del asp.net\r\n\r\nexport const registroUsuario = (usuario) => {\r\n  /* Indicando que no va terminar esta funcion hasta que el server no haya retornado los valores solicitados */\r\n  return new Promise((resolve, eject) => {\r\n    // se envia un request dado el endpoint y la data (usuario) y devuele un objeto response\r\n    instancia.post(\"/usuario/registrar\", usuario).then((response) => {\r\n      // confirmar el proceso para continuar con la logica\r\n      resolve(response);\r\n      console.log(\"Se ha registrado\", response.status);\r\n\r\n    }).catch((error) => {\r\n      console.log(\"Credenciales incorrectas\", error);\r\n    });\r\n  });\r\n};\r\n\r\nexport const obtenerUsuarioActual = (dispatch) => {\r\n  return new Promise((resolve, eject) => {\r\n    //invocar a un endpoint que devuelva la data del usuario\r\n\r\n    // se envia un request dado el endpoint y la data (usuario) y devuele un objeto response\r\n    HttpCliente.get(\"/usuario\").then((response) => {\r\n      //existe o no existe la data de imagenPerfil\r\n      if (response.data && response.data.imagenPerfil) {\r\n        //capturar la data de imgen perfil\r\n        let fotoPerfil = response.data.imagenPerfil;\r\n        //nueva representacion de la foto\r\n        const nuevoFile =\r\n          \"data:image/\" + fotoPerfil.extension + \";base64,\" + fotoPerfil.data;\r\n        //cargarlo\r\n        response.data.imagenPerfil = nuevoFile;\r\n      }\r\n      dispatch({\r\n        type: \"INICIAR_SESION\",\r\n        sesion: response.data,\r\n        autenticado: true,\r\n      });\r\n      resolve(response);\r\n    }).catch((error) => {\r\n      console.log('error actualizar ', error);\r\n      resolve(error);\r\n    })\r\n  });\r\n};\r\n/* Tiene un paramaetro el cual es usuario */\r\nexport const actualizarUsuario = (usuario, dispatch) => {\r\n  return new Promise((resolve, eject) => {\r\n    HttpCliente.put(\"/usuario\", usuario)\r\n      .then((response) => {\r\n        //actualizar el reducer\r\n\r\n        //evaluar la data aver si tiene la imagende perfil\r\n        if (response.data && response.data.imagenPerfil) {\r\n          let fotoPerfil = response.data.imagenPerfil;\r\n          const nuevoFile =\r\n            \"data:image/\" + fotoPerfil.extension + \";base64,\" + fotoPerfil.data;\r\n          response.data.imagenPerfil = nuevoFile;\r\n        }\r\n        //refrescar la data del usuario actual\r\n        dispatch({\r\n          type: \"INICIAR_SESION\",\r\n          sesion: response.data,\r\n          autenticado: true,\r\n        });\r\n        resolve(response);\r\n      })\r\n      .catch((error) => {\r\n        resolve(error.response);\r\n      });\r\n  });\r\n};\r\n\r\n//funcion que permite realizar login\r\n//dispatch para obtener la data del usuario en sesion\r\nexport const loginUsuario = (usuario, dispatch) => {\r\n  return new Promise((resolve, eject) => {\r\n    instancia.post(\"/usuario/login\", usuario)\r\n      .then((response) => {\r\n        if (response.data && response.data.imagenPerfil) {\r\n          let fotoPerfil = response.data.imagenPerfil;\r\n          const nuevoFile =\r\n            \"data:image/\" + fotoPerfil.extension + \";base64,\" + fotoPerfil.data;\r\n          response.data.imagenPerfil = nuevoFile;\r\n        }\r\n\r\n        dispatch({\r\n          type: \"INICIAR_SESION\",\r\n          sesion: response.data,\r\n          autenticado: true,\r\n        });\r\n        resolve(response);\r\n      })\r\n      .catch((error) => {\r\n        resolve(error.response);\r\n      });\r\n  });\r\n};\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\n/* \r\n\r\n*/\r\nexport const StateContext = createContext();\r\n\r\n\r\n/* Privder : suscribir a todos los \r\n        objetos componentes que tendran acceso a las variables globales */\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  /* Reducer : sirve para cambiar el valor global*/\r\n  /* initialState : storage que almacena todas las variables globales */\r\n  /* children : todos los componentes react hooks del proyecto */\r\n\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {/* a Todos los children */}\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\n/*Consumer :  */\r\n\r\n/*UseContext : dar acceso a la variable sesion \r\n    global almacenada en el intialState */\r\n    export const useStateValue = () => useContext(StateContext);\r\n","import { red } from \"@material-ui/core/colors\";\r\n\r\n//style es un json y paper un elemento del json\r\nconst style = {\r\n    paper: {\r\n      marginTop: 8,\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n    },\r\n    form: {\r\n      width: \"100%\",\r\n      marginTop: 20,\r\n      \r\n    },\r\n    submit: {\r\n      marginTop: 15,\r\n    },\r\n    avatar: {\r\n      margin : 5,\r\n      backgroundColor : \"#1976d2\",\r\n      width : 100,\r\n      height : 100,\r\n    },\r\n    icon : {\r\n      fontSize : 40\r\n    },\r\n    create : {\r\n      marginTop: 16,\r\n      backgroundColor : \"rgb(66, 183, 42)\",\r\n    }\r\n  };\r\n  export default style;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","//los action son para funciones globales\r\n\r\nexport const obtenerDataImagen = (imagen) => {\r\n  return new Promise((resolve, eject) => {\r\n    const nombre = imagen.name;\r\n    const extension = imagen.name.split(\".\").pop();\r\n\r\n    //convertir file a base 64\r\n\r\n    //leer la data ingresando\r\n    const lector = new FileReader();\r\n    lector.readAsDataURL(imagen);\r\n    //cargue dentro de la funcion y que devuelva el resultado\r\n    lector.onload = () =>\r\n      resolve({\r\n        //divite el texto en arreglos dividido en las comas encontrada y\r\n        //toma el primer arreglo\r\n        data: lector.result.split(\",\")[1],\r\n        nombre: nombre,\r\n        extension: extension,\r\n      });\r\n\r\n    // si hay error que lo devuelva.\r\n    lector.onerror = (error) => PromiseRejectionEvent(error);\r\n  });\r\n};\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  actualizarUsuario,\r\n  obtenerUsuarioActual,\r\n} from \"../../actions/UsuarioAction\";\r\nimport { useStateValue } from \"../../contexto/store\";\r\n\r\nimport style from \"../Tool/Style\";\r\nimport reactFoto from \"../../logo.svg\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ImageUploader from \"react-images-upload\";\r\nimport { obtenerDataImagen } from \"../../actions/ImagenAction\";\r\n\r\nexport const PerfilUsuario = () => {\r\n  // metodo que me permita saber si ya culmino la carga de datos, muestramelos\r\n\r\n  const [{ sesionUsuario }, dispatch] = useStateValue();\r\n  const [usuario, setUsuario] = useState({\r\n    nombreCompleto: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmarPassword: \"\",\r\n    username: \"\",\r\n    imagenPerfil: null,\r\n    fotoUrl: \"\",\r\n  });\r\n  const ingresarValoresMemoria = (e) => {\r\n    const { name, value } = e.target; //e.target representa la caja de texto\r\n    setUsuario((anterior) => ({\r\n      ...anterior,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUsuario(sesionUsuario.usuario);\r\n    //llenar fotoUrl para el avatar\r\n    setUsuario((anterior) => ({\r\n      ...anterior,\r\n      fotoUrl: sesionUsuario.usuario.imagenPerfil,\r\n      imagenPerfil :null\r\n    }));\r\n  }, []);\r\n\r\n  const guardarUsuario = (e) => {\r\n    e.preventDefault(); //evita que refresque la pag\r\n\r\n    //nos pide la data.\r\n    actualizarUsuario(usuario,dispatch).then((response) => {\r\n      if (response.status == 200) {\r\n        dispatch({\r\n          type: \"OPEN_SNACKBAR\",\r\n          openMensaje: {\r\n            open: true,\r\n            mensaje:\r\n              \"Se han guardado exitosamente los cambios en Perfil de usuario\",\r\n          },\r\n        });\r\n        window.localStorage.setItem(\"token_seguridad\", response.data.token);\r\n      } else {\r\n        dispatch({\r\n          type: \"OPEN_SNACKBAR\",\r\n          openMensaje: {\r\n            open: true,\r\n            mensaje:\r\n              \"Errores al intentar guardar en :\" +\r\n              Object.keys(response.data.errors),\r\n          },\r\n        });\r\n      }\r\n      //debe devolver toda la data actualizada\r\n      /* \r\n      porque va generar un nuevo token y se\r\n      necesita volver a guardar en el storage \r\n      */\r\n    });\r\n  };\r\n\r\n  //**\r\n  //const [{ sesionUsuario }, dispatch] = useStateValue();\r\n\r\n  //recibe las imagenes seleccionadas desde el controlupload\r\n  const subirFoto = (imagenes) => {\r\n    //seleccionar una foto, copiarla y pegarla en el avatar\r\n\r\n    const foto = imagenes[0];\r\n\r\n    //tipo file a fotoUrul\r\n    const fotoUrl = URL.createObjectURL(foto);\r\n\r\n    obtenerDataImagen(foto).then((respuesta) => {\r\n      //respuesta es un json\r\n      console.log(\"respuesta\", respuesta);\r\n      setUsuario((anterior) => ({\r\n        ...anterior,\r\n        imagenPerfil: respuesta, //formato File //respuesta es un json proveniente de actionImagen\r\n        fotoUrl: fotoUrl, //Formato Url\r\n      }));\r\n    });\r\n  };\r\n\r\n  const fotoKey = uuidv4();\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\" justify=\"center\">\r\n      <div style={style.paper}>\r\n        <Avatar style={style.avatar} src={usuario.fotoUrl || reactFoto} />\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Perfil de Usuario\r\n        </Typography>\r\n\r\n        <form style={style.form}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={12}>\r\n              <TextField\r\n                name=\"nombreCompleto\"\r\n                value={usuario.nombreCompleto}\r\n                onChange={ingresarValoresMemoria}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese nombre y apellidos\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"username\"\r\n                value={usuario.username}\r\n                onChange={ingresarValoresMemoria}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese Username\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"email\"\r\n                value={usuario.email}\r\n                onChange={ingresarValoresMemoria}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={usuario.Password}\r\n                onChange={ingresarValoresMemoria}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"ingrese password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                type=\"password\"\r\n                name=\"confirmarPassword\"\r\n                value={usuario.ConfirmarPassword}\r\n                onChange={ingresarValoresMemoria}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"confirme password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={12}>\r\n              <ImageUploader\r\n                withIcon={false}\r\n                key={fotoKey}\r\n                singleImage={true}\r\n                buttonText=\"Seleccione una imagen de perfil\"\r\n                onChange={subirFoto}\r\n                imgExtension={[\".jpg\", \".gif\", \".png\", \".jpeg\"]}\r\n                maxFileSize={5242880}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\">\r\n            <Grid item xs={12} md={6}>\r\n              <Button\r\n                onClick={guardarUsuario}\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                color=\"primary\"\r\n                style={style.submit}\r\n              >\r\n                Guardar Datos\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n","import { Divider, List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const MenuIzquierda = ({ classes }) => (\r\n  <div className={classes.list}>\r\n    <List>\r\n      <ListItem component={Link} button to=\"/auth/perfil\">\r\n        <i className=\"material-icons\">account_box</i>\r\n        <ListItemText\r\n          classes={{ primary: classes.ListItemText }}\r\n          primary=\"Perfil\"\r\n        />\r\n      </ListItem>\r\n    </List>\r\n    <Divider />\r\n    <List>\r\n      <ListItem component={Link} button to=\"/curso/nuevo\">\r\n        <i className=\"material-icons\">add_box</i>\r\n        <ListItemText\r\n          classes={{ primary: classes.ListItemText }}\r\n          primary=\"Nuevo Curso\"\r\n        />\r\n      </ListItem>\r\n    </List>\r\n    <Divider />\r\n    <List>\r\n      <ListItem component={Link} button to=\"/curso/paginador\">\r\n        <i className=\"material-icons\">menu_book</i>\r\n        <ListItemText\r\n          classes={{ primary: classes.ListItemText }}\r\n          primary=\"Lista Cursos\"\r\n        />\r\n      </ListItem>\r\n    </List>\r\n    <Divider />\r\n    <List>\r\n      <ListItem component={Link} button to=\"/Instructor/nuevo\">\r\n        <i className=\"material-icons\">person_add</i>\r\n        <ListItemText\r\n          classes={{ primary: classes.ListItemText }}\r\n          primary=\"Nuevo Instructor\"\r\n        />\r\n      </ListItem>\r\n    </List>\r\n    <Divider />\r\n    <List>\r\n      <ListItem component={Link} button to=\"/Instructor/lista\">\r\n        <i className=\"material-icons\">people</i>\r\n        <ListItemText\r\n          classes={{ primary: classes.ListItemText }}\r\n          primary=\"Lista Instructor\"\r\n        />\r\n      </ListItem>\r\n    </List>\r\n  </div>\r\n);\r\n","import { Avatar, List, ListItem, ListItemText } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport FotoUsuarioTemp from \"../../../logo.svg\";\r\n\r\nexport const MenuDerecha = ({ classes, usuario, salirSesion }) => (\r\n    <div className={classes.list}>\r\n      <List>\r\n        <ListItem component={Link} button to=\"/auth/perfil\" >\r\n          <Avatar src={usuario.imagenPerfil || FotoUsuarioTemp} />\r\n          <ListItemText\r\n            classes={{ primary: classes.ListItemText }}\r\n            primary={usuario ? usuario.nombreCompleto : \"\"}\r\n          />\r\n        </ListItem>\r\n        <ListItem button onClick={salirSesion}>\r\n          <ListItemText\r\n            classes={{ primary: classes.ListItemText }}\r\n            primary=\"salir\"\r\n          />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n);\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Drawer,\r\n  IconButton,\r\n  makeStyles,\r\n  Toolbar,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport FotoUsuarioTemp from \"../../../logo.svg\";\r\nimport { useStateValue } from \"../../../contexto/store\";\r\nimport { MenuIzquierda } from \"./MenuIzquierda\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { MenuDerecha } from \"./MenuDerecha\";\r\n\r\n//estructura para responsive\r\nconst useStyles = makeStyles((theme) => ({\r\n  seccionDesktop: {\r\n    display: \"none\",\r\n    //si se trata de tablet o desktop rompa el secciondesktop de arriba (mostrarlo)\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  seccionMobile: {\r\n    display: \"flex\",\r\n    //si se trata de tablet o desktop (ocultar)\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  grow: {\r\n    //grow toma todo el espacio disponible de un div\r\n    flexGrow: 1,\r\n  },\r\n  avatarSize: {\r\n    width: 40,\r\n    height: 40,\r\n  },\r\n  list: {\r\n    width: 250,\r\n  },\r\n  listItemText: {\r\n    fontSize: \"14px\",\r\n    fontWeight: 600,\r\n    paddingLeft: \"15px\",\r\n    color: \"#212121\",\r\n  },\r\n}));\r\n\r\nconst BarSesion = (props) => {\r\n  const classes = useStyles();\r\n\r\n  //invocar variable global de estado\r\n  const [{ sesionUsuario }, dispatch] = useStateValue();\r\n  // variable local que indica que cuando se inicialice va estar cerrado\r\n  const [abrirMenuIzquierda, setAbrirMenuIzquierda] = useState(false);\r\n  const [abrirMenuDerecha, setAbrirMenuDerecha] = useState(false);\r\n\r\n  //actualizar el menu\r\n  const cerrarMenuIzquierda = () => {\r\n    setAbrirMenuIzquierda(false);\r\n  };\r\n  const abrirMenuIzquierdaAction = () => {\r\n    setAbrirMenuIzquierda(true);\r\n  };\r\n  const cerrarMenuDerecha = () => {\r\n    setAbrirMenuDerecha(false);\r\n  };\r\n  const salirSesionApp = () => {\r\n    localStorage.removeItem(\"token_seguridad\");\r\n    //actualizar la variable global\r\n    dispatch({\r\n      type : \"SALIR_SESION\",\r\n      nuevoUsuario : null,\r\n      autenticado : false\r\n    })\r\n    props.history.push(\"/auth/login\");\r\n  };\r\n  const abrirMenuDerechaAction = () => {\r\n    setAbrirMenuDerecha(true);\r\n  }\r\n  const irAPerfil = () => {\r\n    props.history.push(\"/auth/perfil\");\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* Drawer permite poner barra de naveacion */}\r\n      <Drawer\r\n        open={abrirMenuIzquierda}\r\n        onClose={cerrarMenuIzquierda}\r\n        anchor=\"left\"\r\n      >\r\n        <div\r\n          className={classes.list}\r\n          onKeyDown={cerrarMenuIzquierda}\r\n          onClick={cerrarMenuIzquierda}\r\n        >\r\n          <MenuIzquierda classes={classes} />\r\n        </div>\r\n      </Drawer>\r\n\r\n      <Drawer\r\n        open={abrirMenuDerecha}\r\n        onClose={cerrarMenuDerecha}\r\n        anchor=\"right\"\r\n      >\r\n        <div\r\n          className = {classes.list}\r\n          onKeyDown={cerrarMenuDerecha}\r\n          onClick={cerrarMenuDerecha}\r\n        >\r\n          <MenuDerecha\r\n            classes={classes}\r\n            salirSesion={salirSesionApp}\r\n            usuario={sesionUsuario ? sesionUsuario.usuario : null}\r\n          />\r\n        </div>\r\n      </Drawer>\r\n      {/*en el toolbar se colocan todos los componentes graficos */}\r\n      <Toolbar>\r\n        <IconButton color=\"inherit\" onClick={abrirMenuIzquierdaAction}>\r\n          <i className=\"material-icons\">menu</i>\r\n        </IconButton>\r\n        <Typography variant=\"h6\">Cursos Online</Typography>\r\n\r\n        {/* Creando un espacio*/}\r\n        <div className={classes.grow}></div>\r\n        {/* Encerrando los componentes que se muestran solo en desktop o tablet */}\r\n        <div className={classes.seccionDesktop}>\r\n          <Button color=\"inherit\" onClick={salirSesionApp}>Salir</Button>\r\n          <Button color=\"inherit\" onClick={irAPerfil}>\r\n            {sesionUsuario ? sesionUsuario.usuario.nombreCompleto : \"\"}\r\n          </Button>\r\n          <Avatar src={sesionUsuario.usuario.imagenPerfil || FotoUsuarioTemp}></Avatar>\r\n        </div>\r\n        <div className={classes.seccionMobile}>\r\n          <IconButton color=\"inherit\" onClick ={abrirMenuDerechaAction}>\r\n            <i className=\"material-icons\">more_vert</i>\r\n          </IconButton>\r\n        </div>\r\n      </Toolbar>\r\n    </React.Fragment>\r\n  );\r\n};\r\n//withRouter permite que las propiedades de nav\r\n//dentro de ese componente pueda trabajarse\r\n//para poder utilizar el props\r\nexport default withRouter(BarSesion);\r\n","import { AppBar } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useStateValue } from \"../../contexto/store\";\r\nimport BarSesion from \"./bar/BarSesion\";\r\n\r\nexport const AppNavbar = () => {\r\n  const [{ sesionUsuario }, dispatch] = useStateValue();\r\n\r\n  return sesionUsuario ? (\r\n    sesionUsuario.autenticado == true ? (\r\n      <AppBar position=\"static\">\r\n        <BarSesion />\r\n      </AppBar>\r\n    ) : null\r\n  ) : null;\r\n\r\n  /*\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <BarSesion />\r\n    </AppBar>\r\n  );\r\n  */\r\n};\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useStateValue } from \"../../contexto/store\";\r\n\r\nconst RutaSegura = ({ component: Component, ...rest }) => {\r\n  const [{ sesionUsuario }, dispatch] = useStateValue();\r\n  return (\r\n    <Route\r\n    // caracterisitcas origiales desde el parametro\r\n      {...rest}\r\n      //pintar un componente\r\n      render={(props) =>\r\n        //evaluar que exista\r\n        sesionUsuario ? (\r\n            //evaluar  estado de autenticacion\r\n          sesionUsuario.autenticado == true ? (\r\n              //pinte el componente original\r\n            <Component {...props} {...rest} />\r\n            // si no, haga redirect al login\r\n          ) : (\r\n            <Redirect to=\"/auth/login\" />\r\n          )// si no existe, redirect a login\r\n        ) : (\r\n          <Redirect to=\"/auth/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\nexport default RutaSegura;","import {\r\n  Avatar,\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport style from \"../Tool/Style\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { loginUsuario } from \"../../actions/UsuarioAction\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { useStateValue } from \"../../contexto/store\";\r\n\r\n//Props : está el objeto que permite ahcer redireccionamiento\r\nconst Login = (props) => {\r\n  const [{ usuarioSesion }, dispatch] = useStateValue();\r\n  const [usuario, setUsuario] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const ingresarValoresMemoria = (e) => {\r\n    const { name, value } = e.target; //targetea la data de los campos de texto\r\n    setUsuario((anterior) => ({\r\n      ...anterior,\r\n      [name]: value,\r\n    }));\r\n  };\r\n  const registroButton = e => {\r\n    e.preventDefault();\r\n    props.history.push(\"/auth/registrar\");\r\n  }\r\n\r\n  const loginUsuariobutton = (e) => {\r\n    e.preventDefault();\r\n    loginUsuario(usuario, dispatch).then((response) => {\r\n      if (response.status === 200) {\r\n        //si es exitoso, setear la variable del local storage\r\n        window.localStorage.setItem(\"token_seguridad\", response.data.token);\r\n        //redireccionar a la pagina principal como logeado\r\n        props.history.push(\"/\");\r\n      } else {\r\n        dispatch({\r\n          type: \"OPEN_SNACKBAR\",\r\n          openMensaje: {\r\n            open: true,\r\n            mensaje: \"Credenciales de usuario incorrectas\",\r\n          }\r\n        })\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth=\"xs\" >\r\n      <div style={style.paper} >\r\n        <Avatar style={style.avatar}>\r\n          <LockOutlinedIcon style={style.icon} />\r\n        </Avatar>\r\n        <form stype={style.form}>\r\n          <TextField\r\n            name=\"email\"\r\n            value={usuario.email}\r\n            onChange={ingresarValoresMemoria}\r\n            variant=\"outlined\"\r\n            label=\"Email\"\r\n            fullWidth\r\n          />\r\n          <TextField\r\n            name=\"password\"\r\n            value={usuario.password}\r\n            onChange={ingresarValoresMemoria}\r\n            variant=\"outlined\"\r\n            label=\"password\"\r\n            type=\"password\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            onClick={loginUsuariobutton}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={style.submit}\r\n            margin=\"normal\"\r\n          >\r\n            Log In\r\n          </Button>\r\n          \r\n\r\n        </form>\r\n        <Button\r\n            type=\"submit\"\r\n            onClick={registroButton}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            margin=\"normal\"\r\n            style = {style.create}\r\n          >\r\n            Create An Account\r\n          </Button>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withRouter(Login);\r\n","import HttpCliente from \"../Servicios/HttpClient\";\r\n\r\nexport const guardarCurso = async (curso, imagen) => {\r\n  //definir los edpoints\r\n  const endPointCurso = \"/cursos\";\r\n  const promesaCurso = HttpCliente.post(endPointCurso, curso);\r\n  //si existe...\r\n  if (imagen) {\r\n    const endPointImagen = \"/documento\";\r\n    const promesaImagen = HttpCliente.post(endPointImagen, imagen);\r\n    return await Promise.all([promesaCurso, promesaImagen]);\r\n  } else {\r\n    //si es nula la imagen\r\n    return await Promise.all([promesaCurso]);\r\n  }\r\n};\r\n//Implementar la paginación\r\nexport const PaginacionCurso = (paginador) => {\r\n  return new Promise((resolve, eject) => {\r\n    HttpCliente.post(\"/cursos/report\", paginador).then((response) => {\r\n      resolve(response);\r\n      console.log(\"santiCursos\",response);\r\n\r\n    });\r\n  });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport const ControlTyping = (texto, delay) => {\r\n  const [textoValor, setTextoValor] = useState();\r\n  useEffect(() => {\r\n      //semaforo que indica si ya dejo de escribir\r\n    const manejador = setTimeout(() => {\r\n      setTextoValor(texto);\r\n      //delay tiempo de espera\r\n    }, delay);\r\n    return () => {\r\n        //funcion que va reiniciar el valor del manejador que controla el tiempo\r\n      clearTimeout(manejador);\r\n    };\r\n    //se ejecuta cada vez que se ingresa en el campo texto\r\n  }, [texto]);\r\n  return textoValor;\r\n};\r\n","import {\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  TablePagination,\r\n  Hidden,\r\n  TextField,\r\n  Grid,\r\n  TableFooter,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { PaginacionCurso } from \"../../actions/CursoAction\";\r\nimport { ControlTyping } from \"../Tool/ControlTyping\";\r\n\r\nexport const PaginadorCurso = () => {\r\n  const [textoBusquedaCurso, setTextoBusquedaCurso] = useState(\"\");\r\n  //controlo timing\r\n  const typingBuscadorTexto = ControlTyping(textoBusquedaCurso, 900);\r\n\r\n  const [paginadorRequest, setPaginadorRequest] = useState({\r\n    titulo: \"\",\r\n    numeroPagina: 0,\r\n    cantidadElementos: 5,\r\n  });\r\n  const [paginadorResponse, setPaginadorResponse] = useState({\r\n    listaRecords: [],\r\n    totalRecords: 0,\r\n    numeroPaginas: 0,\r\n  });\r\n  //metodo que carge al servidor inmediatamente se haya cargado paginador curso\r\n  useEffect(() => {\r\n    //invokar el action\r\n    //obtener la data\r\n    //poniendo la data dentro de paginador Response\r\n    const obtenerListaCurso = async () => {\r\n      //evaluar estado del timing buscador\r\n      let tituloVariant = \"\";\r\n      let paginaVariant = paginadorRequest.numeroPagina + 1;\r\n      if (typingBuscadorTexto) {\r\n        tituloVariant = typingBuscadorTexto;\r\n        paginaVariant = 1;\r\n      }\r\n      //crear request\r\n      const objetoPaginadorRequest = {\r\n        titulo: tituloVariant,\r\n        numeroPagina: paginaVariant,\r\n        cantidadElementos: paginadorRequest.cantidadElementos,\r\n      };\r\n      //obtener el response\r\n      const response = await PaginacionCurso(objetoPaginadorRequest);\r\n      //llevar la data a la variable\r\n      setPaginadorResponse(response.data);\r\n    };\r\n    obtenerListaCurso();\r\n  }, [paginadorRequest, typingBuscadorTexto]); //cada vez que paginadorRequest cambie, se va ejecutar el useEffect\r\n\r\n  const cambiarPagina = (event, nuevaPagina) => {\r\n    //cada vez que cambia de pagina debe ocurrir una llamada al servidor\r\n    setPaginadorRequest((anterior) => ({\r\n      ...anterior,\r\n      //cambia string a int\r\n      numeroPagina: parseInt(nuevaPagina),\r\n    }));\r\n  };\r\n  const cambiarCantidadRecords = (event) => {\r\n    setPaginadorRequest((anterior) => ({\r\n      ...anterior,\r\n      cantidadElementos: parseInt(event.target.value),\r\n      numeroPagina: 0,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\", width: \"100%\" }}>\r\n      <Grid container style={{ paddingTop: \"20px\", paddingBottom: \"20px\" }}>\r\n        <Grid item xs={12} sm={4} md={6}>\r\n          <TextField\r\n            fullWidth\r\n            name=\"textoBusquedaCurso\"\r\n            variant=\"outlined\"\r\n            label=\"Busca tu curso\"\r\n            onChange={(e) => setTextoBusquedaCurso(e.target.value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TableContainer component={Paper}>\r\n        <Table size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"left\">Cursos</TableCell>\r\n              <Hidden mdDown>\r\n                <TableCell align=\"left\">Descripcion</TableCell>\r\n                <TableCell align=\"left\">Fecha Publicacion</TableCell>\r\n                <TableCell align=\"left\">Precio Original</TableCell>\r\n                <TableCell align=\"left\">Precio Promocion</TableCell>\r\n              </Hidden>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {paginadorResponse.listaRecords.map((curso) => (\r\n              <TableRow key={curso.CursoId}>\r\n                <TableCell align=\"left\">{curso.Titulo}</TableCell>\r\n                <Hidden mdDown>\r\n                  <TableCell align=\"left\">{curso.Descripcion}</TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {new Date(curso.FechaPublicacion).toLocaleString()}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{curso.PrecioActual}</TableCell>\r\n                  <TableCell align=\"left\">{curso.Promocion}</TableCell>\r\n                </Hidden>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        \r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25]}\r\n              count={paginadorResponse.totalRecords}\r\n              rowsPerPage={paginadorRequest.cantidadElementos}\r\n              page={paginadorRequest.numeroPagina}\r\n              onChangePage={cambiarPagina}\r\n              onChangeRowsPerPage={cambiarCantidadRecords}\r\n              labelRowsPerPage=\"Cursos Por Página\"\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport style from \"../Tool/Style\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport ImageUploader from \"react-images-upload\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { obtenerDataImagen } from \"../../actions/ImagenAction\";\r\nimport { guardarCurso } from \"../../actions/CursoAction\";\r\nimport { useStateValue } from \"../../contexto/store\";\r\n\r\nconst NuevoCurso = () => {\r\n  const [{sesionUsuario}, dispatch] = useStateValue();\r\n  //manejo de estados de los elementos\r\n  const [fechaSeleccionada, setFechaSeleccionada] = useState(new Date());\r\n\r\n  // manejo de las imagenes\r\n  const [imagenCurso, setImagenCurso] = useState(null);\r\n\r\n  //variables locales para los demas campos\r\n  const [curso, setCurso] = useState({\r\n    titulo: \"\",\r\n    descripcion: \"\",\r\n    precio: 0.0,\r\n    promocion: 0.0,\r\n  });\r\n  const resetearForm = () => {\r\n    setFechaSeleccionada(new Date());\r\n    setImagenCurso(null);\r\n    setCurso({\r\n      titulo: \"\",\r\n      descripcion: \"\",\r\n      precio: 0.0,\r\n      promocion: 0.0,\r\n    });\r\n  };\r\n  const ingresarValoresMemoria = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurso((anterior) => ({\r\n      ...anterior, //mantenga todo lo anterior\r\n      [name]: value, // excepto la caja de texto\r\n    }));\r\n  };\r\n\r\n  const subirFoto = (imagenes) => {\r\n    const foto = imagenes[0];\r\n\r\n    //convertir file a base60\r\n    obtenerDataImagen(foto).then((respuesta) => {\r\n      //actualizar la imagen\r\n      setImagenCurso(respuesta);\r\n    });\r\n  };\r\n  const guardarCursoBoton = (e) => {\r\n    e.preventDefault();\r\n    //crear un nuevo id para relacionar ambos objetos en la bd\r\n    const cursoId = uuidv4();\r\n    const objetoCurso = {\r\n      titulo: curso.titulo,\r\n      descripcion: curso.descripcion,\r\n      //parseFloat convierte strings a float\r\n      promocion: parseFloat(curso.promocion || 0.0),\r\n      precio: parseFloat(curso.precio || 0.0),\r\n      fechaPublicacion: fechaSeleccionada,\r\n      cursoId: cursoId,\r\n    };\r\n    let objetoImagen = null;\r\n\r\n    //si existe la imagen, de lo contrario el guardarCurso no lo enviaria\r\n    //debido a que es null\r\n    if (imagenCurso) {\r\n      //si no hay, no lo enviaria al servidor...\r\n      objetoImagen = {\r\n        nombre: imagenCurso.nombre,\r\n        data: imagenCurso.data,\r\n        extension: imagenCurso.extension,\r\n        objetoReferencia: cursoId,\r\n      };\r\n    }\r\n    //...solo se enviaria el objetoCurso\r\n    guardarCurso(objetoCurso, objetoImagen).then((respuestas) => {\r\n      const responseCurso = respuestas[0];\r\n      const responseImagen = respuestas[1];\r\n\r\n      //mensaje que se pinta en el snackbar\r\n      let mensaje = \"\";\r\n      // evaluando la respuesta respecto a responseCurso\r\n      if (responseCurso.status === 200) {\r\n        mensaje += \"se ha guardado exitosamente el curso\";\r\n        resetearForm();\r\n      } else {\r\n        mensaje += \"Errores :\" + Object.keys(responseCurso.data.errors);\r\n      }\r\n      //evaluar existencia de imagen\r\n      if (responseImagen) {\r\n        if (responseImagen.status === 200) {\r\n          mensaje += \"se ha guardado exitosamente la imagen\";\r\n        } else {\r\n          mensaje +=\r\n            \"Errores en imagen\" + Object.keys(responseImagen.data.errors);\r\n        }\r\n      }\r\n      dispatch({\r\n        type: \"OPEN_SNACKBAR\",\r\n        openMensaje: {\r\n          open: true,\r\n          mensaje: mensaje,\r\n        },\r\n      });\r\n    });\r\n  };\r\n\r\n  const fotoKey = uuidv4();\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\" justify=\"center\">\r\n      <div style={style.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Registro de nuevo Curso\r\n        </Typography>\r\n        <form style={style.form}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={12}>\r\n              <TextField\r\n                name=\"titulo\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese Titulo\"\r\n                value={curso.titulo}\r\n                onChange={ingresarValoresMemoria}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={12}>\r\n              <TextField\r\n                name=\"descripcion\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese Descripcion\"\r\n                value={curso.descripcion}\r\n                onChange={ingresarValoresMemoria}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"precio\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese Precio Normal\"\r\n                value={curso.precio}\r\n                onChange={ingresarValoresMemoria}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"promocion\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese Precio Promocion\"\r\n                value={curso.promocion}\r\n                onChange={ingresarValoresMemoria}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  value={fechaSeleccionada}\r\n                  onChange={setFechaSeleccionada}\r\n                  margin=\"normal\"\r\n                  id=\"fecha-publicacion-id\"\r\n                  label=\"Seleccione Fecha de Publicacion\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  fullWidth\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <ImageUploader\r\n                withIcon={false}\r\n                key={fotoKey}\r\n                singleImage={true}\r\n                buttonText=\"Seleccion imagen del curso\"\r\n                onChange={subirFoto}\r\n                imgExtension={[\".jpg\", \".gif\", \".png\", \".jpeg\"]}\r\n                maxFileSize={5242880}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\">\r\n            <Grid item xs={12} md={6}>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                style={style.submit}\r\n                onClick={guardarCursoBoton}\r\n              >\r\n                Guardar Curso\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\nexport default NuevoCurso;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useStateValue } from \"../../contexto/store\";\r\n\r\nconst RutaSegura2 = ({ component: Component, ...rest }) => {\r\n  const [{ sesionUsuario }, dispatch] = useStateValue();\r\n  return (\r\n    <Route\r\n      // caracterisitcas origiales desde el parametro\r\n      {...rest}\r\n      //pintar un componente\r\n      render={(props) =>\r\n        //evaluar que exista\r\n        sesionUsuario ? (\r\n          //evaluar  estado de autenticacion\r\n          sesionUsuario.autenticado == true ? (\r\n            //pinte el componente original\r\n            <Redirect to =\"/auth/perfil\" />\r\n          ) : (\r\n            // si no, haga redirect al login\r\n            <Component {...props} {...rest} />\r\n          ) // si no existe, redirect a login\r\n        ) : (\r\n          <Component {...props} {...rest} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\nexport default RutaSegura2;\r\n","import HttpCliente from \"../Servicios/HttpClient\";\r\n\r\nexport const guardarInstructor = async (instructor, imagen) => {\r\n  //definir los edpoints\r\n  const endPointInstructores = \"/instructor\";\r\n  const promesaInstructor = HttpCliente.post(endPointInstructores, instructor);\r\n  //si existe...\r\n  if (imagen) {\r\n    const endPointImagen = \"/documento\";\r\n    const promesaImagen = HttpCliente.post(endPointImagen, imagen);\r\n    return await Promise.all([promesaInstructor, promesaImagen]);\r\n  } else {\r\n    //si es nula la imagen\r\n    return await Promise.all([promesaInstructor]);\r\n  }\r\n};\r\n//Implementar la paginación\r\nexport const PaginacionInstructor = (paginador) => {\r\n    return new Promise((resolve, eject) => {\r\n      HttpCliente.post(\"/Instructor/report\", paginador).then((response) => {\r\n        resolve(response);\r\n      });\r\n    });\r\n  };","import {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport style from \"../Tool/Style\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport ImageUploader from \"react-images-upload\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { obtenerDataImagen } from \"../../actions/ImagenAction\";\r\nimport { useStateValue } from \"../../contexto/store\";\r\nimport { guardarInstructor } from \"../../actions/InstructorAction\";\r\n\r\n/*\r\n        public Guid InstructorId { get; set; }\r\n        public string Nombre { get; set; }\r\n        public string Apellidos { get; set; }\r\n        public string Grado { get; set; }\r\n        public byte[] FotoPerfil { get; set; }\r\n        public DateTime FechaCreacion {get;set;}\r\n */\r\nconst NuevoInstructor = () => {\r\n  const [{sesionUsuario}, dispatch] = useStateValue();\r\n  //manejo de estados de los elementos\r\n  const [fechaSeleccionada, setFechaSeleccionada] = useState(new Date());\r\n\r\n  // manejo de las imagenes\r\n  const [imagenInstructor, setImagenInstructor] = useState(null);\r\n\r\n  //variables locales para los demas campos\r\n  const [instructor, setInstructor] = useState({\r\n    nombre: \"\",\r\n    apellidos: \"\",\r\n    grado: \"\",\r\n  });\r\n  const resetearForm = () => {\r\n    setFechaSeleccionada(new Date());\r\n    setImagenInstructor(null);\r\n    setInstructor({\r\n      nombre: \"\",\r\n      apellidos: \"\",\r\n      grado: \"\",\r\n    });\r\n  };\r\n  const ingresarValoresMemoria = (e) => {\r\n    const { name, value } = e.target; //datos de la caja de texto\r\n    setInstructor((anterior) => ({\r\n      ...anterior, //mantenga todo lo anterior\r\n      [name]: value, // excepto la caja de texto y el valor que tiene esta\r\n    }));\r\n  };\r\n\r\n  const subirFoto = (imagenes) => {\r\n    const foto = imagenes[0];\r\n\r\n    //convertir file a base60\r\n    obtenerDataImagen(foto).then((respuesta) => {\r\n      //actualizar la imagen\r\n      setImagenInstructor(respuesta);\r\n    });\r\n  };\r\n  const guardarInstructorBoton = (e) => {\r\n    e.preventDefault();\r\n    //crear un nuevo id para relacionar ambos objetos en la bd\r\n    const instructorId = uuidv4();\r\n    const objetoInstructor = {\r\n      nombre: instructor.nombre,\r\n      apellidos: instructor.apellidos,\r\n      grado: instructor.grado,\r\n      fechaPublicacion: fechaSeleccionada,\r\n      instructorId: instructorId,\r\n    };\r\n    let objetoImagen = null;\r\n\r\n    //si existe la imagen, de lo contrario el guardarCurso no lo enviaria\r\n    //debido a que es null\r\n    if (imagenInstructor) {\r\n      //si no hay, no lo enviaria al servidor...\r\n      objetoImagen = {\r\n        nombre: imagenInstructor.nombre,\r\n        data: imagenInstructor.data,\r\n        extension: imagenInstructor.extension,\r\n        objetoReferencia: instructorId,\r\n      };\r\n    }\r\n    //...solo se enviaria el objetoCurso\r\n    guardarInstructor(objetoInstructor, objetoImagen).then((respuestas) => {\r\n      const responseInstructor = respuestas[0];\r\n      const responseImagen = respuestas[1];\r\n\r\n      //mensaje que se pinta en el snackbar\r\n      let mensaje = \"\";\r\n      // evaluando la respuesta respecto a responseCurso\r\n      if (responseInstructor.status === 200) {\r\n        mensaje += \"se ha guardado exitosamente el instructor\";\r\n        resetearForm();\r\n      } else {\r\n        mensaje += \"Errores :\" + Object.keys(responseInstructor.data.errors);\r\n      }\r\n      //evaluar existencia de imagen\r\n      if (responseImagen) {\r\n        if (responseImagen.status === 200) {\r\n          mensaje += \"se ha guardado exitosamente la imagen\";\r\n        } else {\r\n          mensaje +=\r\n            \"Errores en imagen\" + Object.keys(responseImagen.data.errors);\r\n        }\r\n      }\r\n      dispatch({\r\n        type: \"OPEN_SNACKBAR\",\r\n        openMensaje: {\r\n          open: true,\r\n          mensaje: mensaje,\r\n        },\r\n      });\r\n    });\r\n  };\r\n\r\n  const fotoKey = uuidv4();\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\" justify=\"center\">\r\n      <div style={style.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Registro de nuevo Instructor\r\n        </Typography>\r\n        <form style={style.form}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={12}>\r\n              <TextField\r\n                name=\"nombre\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese Nombre\"\r\n                value={instructor.nombre}\r\n                onChange={ingresarValoresMemoria}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={12}>\r\n              <TextField\r\n                name=\"apellidos\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese Apellidos\"\r\n                value={instructor.apellidos}\r\n                onChange={ingresarValoresMemoria}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"grado\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Ingrese Grado\"\r\n                value={instructor.grado}\r\n                onChange={ingresarValoresMemoria}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  value={fechaSeleccionada}\r\n                  onChange={setFechaSeleccionada}\r\n                  margin=\"normal\"\r\n                  id=\"fecha-publicacion-id\"\r\n                  label=\"Seleccione Fecha de Ingreso del Instructor\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  fullWidth\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <ImageUploader\r\n                withIcon={false}\r\n                key={fotoKey}\r\n                singleImage={true}\r\n                buttonText=\"Seleccion imagen del instructor\"\r\n                onChange={subirFoto}\r\n                imgExtension={[\".jpg\", \".gif\", \".png\", \".jpeg\"]}\r\n                maxFileSize={5242880}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\">\r\n            <Grid item xs={12} md={6}>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                style={style.submit}\r\n                onClick={guardarInstructorBoton}\r\n              >\r\n                Guardar Instructor\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\nexport default NuevoInstructor;\r\n","import {\r\n  TableContainer,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  TablePagination,\r\n  Hidden,\r\n  TextField,\r\n  Grid,\r\n  TableFooter,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { PaginacionInstructor } from \"../../actions/InstructorAction\";\r\nimport { ControlTyping } from \"../Tool/ControlTyping\";\r\n\r\nexport const PaginadorInstructor = () => {\r\n  const [textoBusquedaInstructor, setTextoBusquedaInstructor] = useState(\"\");\r\n  //controlo timing\r\n  const typingBuscadorTexto = ControlTyping(textoBusquedaInstructor, 900);\r\n\r\n  const [paginadorRequest, setPaginadorRequest] = useState({\r\n    nombre: \"\",\r\n    numeroPagina: 0,\r\n    cantidadElementos: 5,\r\n  });\r\n  const [paginadorResponse, setPaginadorResponse] = useState({\r\n    listaRecords: [],\r\n    totalRecords: 0,\r\n    numeroPaginas: 0,\r\n  });\r\n  //metodo que carge al servidor inmediatamente se haya cargado paginador instructor\r\n  useEffect(() => {\r\n    //invokar el action\r\n    //obtener la data\r\n    //poniendo la data dentro de paginador Response\r\n    const obtenerListaInstructor = async () => {\r\n      //evaluar estado del timing buscador\r\n      let nombreVariant = \"\";\r\n      let paginaVariant = paginadorRequest.numeroPagina + 1;\r\n      if (typingBuscadorTexto) {\r\n        nombreVariant = typingBuscadorTexto;\r\n        paginaVariant = 1;\r\n      }\r\n      //crear request\r\n      const objetoPaginadorRequest = {\r\n        nombre: nombreVariant,\r\n        numeroPagina: paginaVariant,\r\n        cantidadElementos: paginadorRequest.cantidadElementos,\r\n      };\r\n      //obtener el response\r\n      const response = await PaginacionInstructor(objetoPaginadorRequest);\r\n      //llevar la data a la variable\r\n      setPaginadorResponse(response.data);\r\n    };\r\n    obtenerListaInstructor();\r\n  }, [paginadorRequest, typingBuscadorTexto]); //cada vez que paginadorRequest cambie, se va ejecutar el useEffect\r\n\r\n  const cambiarPagina = (event, nuevaPagina) => {\r\n    //cada vez que cambia de pagina debe ocurrir una llamada al servidor\r\n    setPaginadorRequest((anterior) => ({\r\n      ...anterior,\r\n      //cambia string a int\r\n      numeroPagina: parseInt(nuevaPagina),\r\n    }));\r\n  };\r\n  const cambiarCantidadRecords = (event) => {\r\n    setPaginadorRequest((anterior) => ({\r\n      ...anterior,\r\n      cantidadElementos: parseInt(event.target.value),\r\n      numeroPagina: 0,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"10px\", width: \"100%\" }}>\r\n      <Grid container style={{ paddingTop: \"20px\", paddingBottom: \"20px\" }}>\r\n        <Grid item xs={12} sm={4} md={6}>\r\n          <TextField\r\n            fullWidth\r\n            name=\"textoBusquedaInstructor\"\r\n            variant=\"outlined\"\r\n            label=\"Busca Instructor\"\r\n            onChange={(e) => setTextoBusquedaInstructor(e.target.value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TableContainer component={Paper}>\r\n        <Table size=\"small\" aria-label=\"a dense table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell align=\"left\">Nombre</TableCell>\r\n              <Hidden mdDown>\r\n                <TableCell align=\"left\">Apellido</TableCell>\r\n                <TableCell align=\"left\">FechaCreacion</TableCell>\r\n                <TableCell align=\"left\">Grado</TableCell>\r\n              </Hidden>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {paginadorResponse.listaRecords.map((instructor) => (\r\n              <TableRow key={instructor.InstructorId}>\r\n                <TableCell align=\"left\">{instructor.Nombre}</TableCell>\r\n                <Hidden mdDown>\r\n                  <TableCell align=\"left\">{instructor.Apellidos}</TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {new Date(instructor.FechaCreacion).toLocaleString()}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{instructor.Grado}</TableCell>\r\n                </Hidden>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                count={paginadorResponse.totalRecords}\r\n                rowsPerPage={paginadorRequest.cantidadElementos}\r\n                page={paginadorRequest.numeroPagina}\r\n                onChangePage={cambiarPagina}\r\n                onChangeRowsPerPage={cambiarCantidadRecords}\r\n                labelRowsPerPage=\"Instructores Por Página\"\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport style from \"../Tool/Style\";\r\nimport { registroUsuario } from \"../../actions/UsuarioAction\";\r\nimport * as yup from \"yup\";\r\nimport { Formik, useFormik } from \"formik\";\r\nimport { useStateValue } from \"../../contexto/store\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string(\"Enter your email\")\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(8, \"Password should be of minimum 8 characters length\")\r\n    .required(\"Password is required\"),\r\n});\r\n\r\n  const RegistrarUsuario = (props) => {\r\n  /*\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: 'foobar@example.com',\r\n      password: 'foobar',\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n*/\r\n  const [{ usuarioSesion }, dispatch] = useStateValue();\r\n  const [usuario, setUsuario] = useState({\r\n    nombreCompleto: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmarPassword: \"\",\r\n    username: \"\",\r\n  });\r\n  const ingresarValoresMemoria = (e) => {\r\n    const { name, value } = e.target; // captura los atributos de la caja de texto\r\n    setUsuario((anterior) => ({\r\n      ...anterior, // indica todo lo que tenia anteriormente\r\n      [name]: value, //solo el nombre completo se cambia\r\n      //[nombreCompleto] : \"santi gonzalez\"\r\n    }));\r\n  };\r\n\r\n  const registrarElUsuario = (e) => {\r\n    e.preventDefault(); //evita que la pagina se refresque cada vez que se da click en el boton\r\n    //llamar el action con el contenido como parametro\r\n    registroUsuario(usuario, dispatch).then((response) => {\r\n        window.localStorage.setItem(\"token_seguridad\", response.data.token);\r\n        window.location.reload(false);\r\n      if (response.status !== 200) {\r\n        console.log(\"holii\");\r\n      } else {\r\n        dispatch({\r\n          type: \"OPEN_SNACKBAR\",\r\n          openMensaje: {\r\n            open: true,\r\n            mensaje: \"Usuario registrado exitosamente!\",\r\n          },\r\n        });\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"md\" justify=\"center\">\r\n      <div style={style.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign Up\r\n        </Typography>\r\n        <form style={style.form}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} md={12}>\r\n              <TextField\r\n                name=\"nombreCompleto\"\r\n                id=\"email\"\r\n                value={usuario.nombreCompleto} // apuntador de la memoria\r\n                onChange={ingresarValoresMemoria} // metodo\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Name\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"email\"\r\n                value={usuario.email} // apuntador de la memoria\r\n                onChange={ingresarValoresMemoria} // metodo\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Email\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"username\"\r\n                value={usuario.username} // apuntador de la memoria\r\n                onChange={ingresarValoresMemoria} // metodo\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Username\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"password\"\r\n                value={usuario.password} // apuntador de la memoria\r\n                onChange={ingresarValoresMemoria} // metodo\r\n                type=\"password\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Password\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                name=\"confirmarPassword\"\r\n                value={usuario.confirmarPassword} // apuntador de la memoria\r\n                onChange={ingresarValoresMemoria} // metodo\r\n                type=\"password\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Confirm password\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"center\">\r\n            <Grid item xs={12} md={6}>\r\n              <Button\r\n                onClick={registrarElUsuario}\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                style={style.submit}\r\n              >\r\n                Enviar\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\nexport default withRouter(RegistrarUsuario);\r\n","import \"./App.css\";\nimport React, { useEffect, useState } from \"react\";\nimport { ThemeProvider as MuithemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./theme/theme\";\nimport { PerfilUsuario } from \"./components/security/PerfilUsuario\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Grid, Snackbar } from \"@material-ui/core\";\nimport { AppNavbar } from \"./components/navegacion/AppNavbar\";\nimport { useStateValue } from \"./contexto/store\";\nimport { obtenerUsuarioActual } from \"./actions/UsuarioAction\";\nimport RutaSegura from \"./components/navegacion/RutaSegura\";\nimport Login from \"./components/security/Login\";\nimport { PaginadorCurso } from \"./components/cursos/PaginadorCurso\";\nimport NuevoCurso from \"./components/cursos/NuevoCurso\";\nimport RutaSegura2 from \"./components/navegacion/RutaSegura2\";\nimport NuevoInstructor from \"./components/instructores/NuevoInstructor\";\nimport { PaginadorInstructor } from \"./components/instructores/PaginadorInstructor\";\nimport RegistrarUsuario from \"./components/security/RegistrarUsuario\";\n\nfunction App() {\n  \n  //obtener una referencia de la sesion de usuario\n  //referencia a la variable global\n  //dispatch : representacion del contexto\n  const [{ sesionUsario, openSnackbar }, dispatch] = useStateValue();\n  //referencia a la data del status del snackbar\n\n  //flag\n  const [iniciaApp, setIniciaApp] = useState(false);\n\n  //useEfect se usa cuando se halla cargado el componente react\n  useEffect(() => {\n    if (!iniciaApp) {\n      obtenerUsuarioActual(dispatch)\n        .then((response) => {\n          setIniciaApp(true); // true para que no se vuelva a ejecutar\n        })\n        .catch((error) => {\n          setIniciaApp(true);\n        });\n    }\n  }, [iniciaApp]);\n\n  //flag que permite al servidor si se cargo o no la llamada del servidor\n  return iniciaApp === false ? null : (\n    <React.Fragment>\n      <Snackbar\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n        open={openSnackbar ? openSnackbar.open : false}\n        autoHideDuration={3000}\n        ContentProps={{ \"aria-describedby\": \"message-id\" }}\n        message={\n          <span id=\"message-id\">\n            {openSnackbar ? openSnackbar.mensaje : \"\"}\n          </span>\n        }\n        onClose={() =>\n          dispatch({\n            type: \"OPEN_SNACKBAR\",\n            openMensaje: {\n              open: false,\n              mensaje: \"\",\n            },\n          })\n        }\n      ></Snackbar>\n      <Router>\n        <MuithemeProvider theme={theme}>\n          <AppNavbar />\n          <Grid container>\n            <Switch>\n              <RutaSegura2 exact path=\"/auth/login\" component={Login} />\n              <RutaSegura2 exact path=\"/auth/registrar\" component={RegistrarUsuario}/>\n              \n              <RutaSegura exact path=\"/auth/perfil\" component={PerfilUsuario} />\n              <RutaSegura exact path=\"/\" component={PerfilUsuario} />\n              <RutaSegura exact path=\"/curso/nuevo\" component={NuevoCurso} />\n              <RutaSegura exact path=\"/curso/paginador\" component={PaginadorCurso} />\n              <RutaSegura exact path=\"/instructor/nuevo\" component={NuevoInstructor} />\n              <RutaSegura exact path=\"/instructor/lista\" component={PaginadorInstructor} />\n\n\n            </Switch>\n          </Grid>\n        </MuithemeProvider>\n      </Router>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/* almacenar globalmente la data del usuario que está en sesion\r\n    en la app */\r\n\r\n/*1) definir los valores que almacena */\r\n/*2) logica que va ejecutar dependiendo de lo que el usuario quiere hacer */\r\n/*3) Exportar la funcion */\r\n\r\n//valores que va a almacenar el reducer\r\nexport const initialState = {\r\n  usuario: {\r\n    nombreCompleto: \"\",\r\n    email: \"\",\r\n    username: \"\",\r\n    foto: \"\",\r\n  },\r\n  //estado de la sesion del usuario\r\n  autenticado: false,\r\n};\r\n\r\n//manejar la data que se va modificar\r\n//action determina lo que se va hacer con la data\r\nconst sesionUsuarioReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"INICIAR_SESION\":\r\n      return {\r\n        ...state,\r\n        usuario: action.sesion, // trae data en json de los datos del usuario\r\n        autenticado: action.autenticado,\r\n      };\r\n    case \"SALIR_SESION\":\r\n      return {\r\n        ...state,\r\n        usuario: action.nuevoUsuario,\r\n        autenticado: action.autenticado,\r\n      };\r\n    case \"ACTUALIZAR_USUARIO\":\r\n      return {\r\n        ...state,\r\n        usuario: action.nuevoUsuario,\r\n        autenticado: action.autenticado,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default sesionUsuarioReducer;\r\n","import { initialState } from \"./sesionUsuarioReducer\";\r\n\r\nconst intialState = {\r\n  open: false,\r\n  mensaje: \"\",\r\n};\r\nconst openSnackbarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"OPEN_SNACKBAR\":\r\n      return {\r\n        ...state,\r\n        open: action.openMensaje.open, //true-false\r\n        mensaje: action.openMensaje.mensaje, //string\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default openSnackbarReducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { initialState } from \"./contexto/initialState\";\nimport { StateProvider } from \"./contexto/store\";\nimport { mainReducer } from \"./contexto/reducers\";\n\nReactDOM.render(\n    <StateProvider initialState={ initialState } reducer={ mainReducer }>\n      <App />\n    </StateProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/*estado inicial */\r\n/*comienza siendo un dato vacio, conforme se van llenando en formato json*/\r\nexport const initialState = {};\r\n\r\n","/*importar reducers  */\r\nimport sesionUsuarioReducer from \"./sesionUsuarioReducer\";\r\nimport openSnackbarReducer from \"./openSnackBarReducer\";\r\n\r\nexport const mainReducer = ({ sesionUsuario, openSnackbar }, action) => {\r\n  return {\r\n      //se sobreescribe dependiendo al action que invoque los reducers\r\n      \r\n    sesionUsuario: sesionUsuarioReducer(sesionUsuario, action),\r\n    openSnackbar: openSnackbarReducer(openSnackbar, action),\r\n  };\r\n};\r\n"],"sourceRoot":""}